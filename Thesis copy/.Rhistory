# Check 3: classifies for stage II of gentrification, late pioneer stage/first displacement stage
# current indicators:
### increase in land value
### decrease in those on welfare
if (isTRUE(((x$gaa[i] > 0) + (x$welf[i] < 0)) == 2)){
x$gcode[i] <- 3
x$gcode3yr[i] <- x$year[i]
}
} else if (isTRUE(x$gcode[i] == 1)){
# Check 2: classifies for stage I of gentrification, early pioneer stage
# current indicators:
### increase in 18-25s (E_18U25)
### increase in people from EU
if("eu" %in% colnames(x)){
if ( isTRUE ((x$E_18U25[i] > mean(x$E_18U25)) &&
(x$eu[i] > 0)) ){
x$gcode[i] <- 2
x$gcode2yr[i] <- x$year[i]
}
} else {
if ( isTRUE (x$E_18U25[i] > mean(x$E_18U25))){
x$gcode[i] <- 2
x$gcode2yr[i] <- x$year[i]
}
}
} else if (isTRUE(x$gcode[i] == 0)){
# Check 1: classifies for pre-gentrification areas
# current indicators:
### above 75 percentile of land value: already too expensive to be gentrified
if (isTRUE(x$gaa[i] <= quantile(x$gaa, .6))){
x$gcode[i] <- 1
x$gcode1yr[i] <- x$year[i]
}
}
}
}
return(x)
}
# running function through datasets
b03g <- gentriclass(b01) %>% dplyr::select(c(1:6, 14))
b03g$gen.01 <- b03g$gcode
b03g <- b03g %>% merge(., b03c, by="RAUMID")
b05g <- gentriclass(b03g) %>% dplyr::select(1:8)
b05g$gen.03 <- b05g$gcode
b05g <- b05g %>% merge(., b05c, by="RAUMID")
b07g <- gentriclass(b05g) %>% dplyr::select(1:9)
b07g$gen.05 <- b07g$gcode
b07g <- b07g %>% merge(., b07c, by="RAUMID")
b09g <- gentriclass(b07g) %>% dplyr::select(1:10)
b09g$gen.07 <- b09g$gcode
b09g <- b09g %>% merge(., b09c, by="RAUMID")
b11g <- gentriclass(b09g) %>% dplyr::select(1:11)
b11g$gen.09 <- b11g$gcode
b11g <- b11g %>% merge(., b11c, by="RAUMID")
b13g <- gentriclass(b11g) %>% dplyr::select(1:12)
b13g$gen.11 <- b13g$gcode
b13g <- b13g %>% merge(., b13c, by="RAUMID")
b15g <- gentriclass(b13g) %>% dplyr::select(1:13)
b15g$gen.13 <- b15g$gcode
b15g <- b15g %>% merge(., b15c, by="RAUMID")
b17g <- gentriclass(b15g) %>% dplyr::select(1:14)
b17g$gen.15 <- b17g$gcode
b17g <- b17g %>% merge(., b17c, by="RAUMID")
b19g <- gentriclass(b17g) %>% dplyr::select(1:15)
b19g$gen.17 <- b19g$gcode
b19g <- b19g %>% merge(., b19c, by="RAUMID")
bfinal <- gentriclass(b19g) %>% dplyr::select(1:16)
bfinal$gen.19 <- bfinal$gcode
# changing time variables from numeric to date
bfinal[bfinal==0] <- NA
bfinal[2:6] <- as.data.frame(lapply(bfinal[2:6], function(x) as.Date(x, origin = '1970-01-01')))
# adding new columns measuring time spent in each stage of gentrification
s1 <- bfinal %>% filter(!is.na(bfinal$gcode2yr))
s1$tg1 <- time_length(difftime(s1$gcode2yr, s1$gcode1yr), "years")
s1 <- s1[c(1, 18)]
s2 <- bfinal %>% filter(!is.na(bfinal$gcode3yr))
s2$tg2 <- time_length(difftime(s2$gcode3yr, s2$gcode2yr), "years")
s2 <- s2[c(1, 18)]
s3 <- bfinal %>% filter(!is.na(bfinal$gcode4yr))
s3$tg3 <- time_length(difftime(s3$gcode4yr, s3$gcode3yr), "years")
s3 <- s3[c(1, 18)]
s4 <- bfinal %>% filter(!is.na(bfinal$gcode5yr))
s4$tg4 <- time_length(difftime(s4$gcode5yr, s4$gcode4yr), "years")
s4 <- s4[c(1, 18)]
s5 <- bfinal %>% filter(!is.na(bfinal$gcode5yr))
s5$tg5 <- time_length(difftime(as.Date("2020-1-1"), s5$gcode5yr), "years")
s5 <- s5[c(1, 18)]
bfinal <- bfinal %>% left_join(., s1, by=c("RAUMID")) %>%
left_join(., s2, by=c("RAUMID")) %>%
left_join(., s3, by=c("RAUMID")) %>%
left_join(., s4, by=c("RAUMID")) %>%
left_join(., s5, by=c("RAUMID"))
bfinal[8:12] <- round(bfinal[8:12], digits = 1)
View(b01)
########################################
# Thesis Script 2.3: Reformatting to long
########################################
library(tidyverse)
library(lubridate)
library(reshape2)
setwd("~/Desktop/Code/Thesis")
load("~/Desktop/Code/Thesis/Data_for_Analysis/bfinal.Rdata")
load("~/Desktop/Code/Thesis/Data_for_Analysis/eg.rda")
load("~/Desktop/Code/Thesis/Data_for_Analysis/pdau.Rdata")
##### some minor formatting before analysis
eg_lor_full$ID <- as.numeric(eg_lor_full$ID)
df <- left_join(bfinal, eg_lor_full, by=c("RAUMID" = "ID"))
df$F_IN_KRAFT.x <- round_date(df$F_IN_KRAFT.x, unit = "years") %>% lubridate::year() %>% as.numeric()
df$F_IN_KRAFT.y <- round_date(df$F_IN_KRAFT.y, unit = "years") %>% lubridate::year() %>% as.numeric()
df <- df[-c(2:6)]
df[is.na(df)] <- 0
########################################
# Thesis Script 2.3: Reformatting to long
########################################
library(tidyverse)
library(lubridate)
library(reshape2)
setwd("~/Desktop/Code/Thesis")
load("~/Desktop/Code/Thesis/Data_for_Analysis/bfinal.Rdata")
load("~/Desktop/Code/Thesis/Data_for_Analysis/eg.rda")
load("~/Desktop/Code/Thesis/Data_for_Analysis/pdau.Rdata")
##### some minor formatting before analysis
eg_lor_full$ID <- as.numeric(eg_lor_full$ID)
df <- left_join(bfinal, eg_lor_full, by=c("RAUMID" = "ID"))
df$F_IN_KRAFT.x <- round_date(df$F_IN_KRAFT.x, unit = "years") %>% lubridate::year() %>% as.numeric()
df$F_IN_KRAFT.y <- round_date(df$F_IN_KRAFT.y, unit = "years") %>% lubridate::year() %>% as.numeric()
df <- df[-c(2:6)]
df[is.na(df)] <- 0
##### converting data into long format
# status and protected status
dfg <- df[c(1, 3:12, 19:20, 30:31)]
dfL_gstatus <- reshape(dfg,
direction = "long",
varying = c("gen.01", "gen.03", "gen.05", "gen.07", "gen.09", "gen.11",
"gen.13", "gen.15", "gen.17", "gen.19"),
v.names = "gstatus",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID")
dfttime <- df %>% dplyr::select(c(1, 21:30))
dfL_tt <- reshape(dfttime,
direction = "long",
varying = list(names(dfttime)[c(2:10)]),
v.names = "treattime",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
dfttime500 <- df %>% dplyr::select(1, 32:40)
dfL_tt500 <- reshape(dfttime500,
direction = "long",
varying = list(names(dfttime500)[c(2:10)]),
v.names = "treattime500",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 4))
dfL_isegL <- reshape(df,
direction = "long",
varying = list(names(df)[c(42:50)]),
v.names = "is_eg_byyear",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 53))
dfL_isegL500 <- reshape(df,
direction = "long",
varying = list(names(df)[c(51:59)]),
v.names = "is_eg_byyear500",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 53))
# number foreigners
dfL_aus <- reshape(baus,
direction = "long",
varying = list(names(dfa)[c(2:10)]),
v.names = "auschange",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
bpdau[8:10] <- NA
bpdau <- bpdau %>% rename(pda.03 = V8, pda.05 = V9, pda.07 = V10) %>% dplyr::select(c(1, 8:10, 2:7))
pdauL <- reshape(bpdau,
direction="long",
varying = list(names(bpdau)[c(2:10)]),
v.names = "pdau",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")
) %>% tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
gaaL <- reshape(bgaa,
direction="long",
varying = list(names(bgaa)[c(2:10)]),
v.names = "gaa_change",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")
) %>% tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
euL <- reshape(beu,
direction="long",
varying = list(names(beu)[c(2:10)]),
v.names = "eu_change",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")
) %>% tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
waL <- reshape(bwa,
direction="long",
varying = list(names(bwa)[c(2:10)]),
v.names = "WA_change",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")
) %>% tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
dfL_full <- left_join(dfL_gstatus, dfL_aus, by=c("ID")) %>%
left_join(., dfL_tt, by=c("ID")) %>%
left_join(., dfL_tt500, by=c("ID")) %>%
left_join(., pdauL, by=c("ID")) %>%
left_join(., dfL_isegL, by=c("ID")) %>%
left_join(., dfL_isegL500, by=c("ID")) %>%
left_join(., gaaL, by=c("ID")) %>%
left_join(., euL, by=c("ID")) %>%
left_join(., waL, by=c("ID"))
dfL_full[is.na(dfL_full)] <- 0
dfL_full$Year <- dfL_full$Year %>% as.numeric()
dfL_full$is_eg_byyear500[dfL_full$is_eg_byyear == 1] <- 2
########################################
# Thesis Script 2.3: Reformatting to long
########################################
library(tidyverse)
library(lubridate)
library(reshape2)
setwd("~/Desktop/Code/Thesis")
load("~/Desktop/Code/Thesis/Data_for_Analysis/bfinal.Rdata")
load("~/Desktop/Code/Thesis/Data_for_Analysis/eg.rda")
load("~/Desktop/Code/Thesis/Data_for_Analysis/pdau.Rdata")
##### some minor formatting before analysis
eg_lor_full$ID <- as.numeric(eg_lor_full$ID)
df <- left_join(bfinal, eg_lor_full, by=c("RAUMID" = "ID"))
df$F_IN_KRAFT.x <- round_date(df$F_IN_KRAFT.x, unit = "years") %>% lubridate::year() %>% as.numeric()
df$F_IN_KRAFT.y <- round_date(df$F_IN_KRAFT.y, unit = "years") %>% lubridate::year() %>% as.numeric()
df <- df[-c(2:6)]
df[is.na(df)] <- 0
##### converting data into long format
# status and protected status
dfg <- df[c(1, 3:12, 19:20, 30:31)]
dfL_gstatus <- reshape(dfg,
direction = "long",
varying = c("gen.01", "gen.03", "gen.05", "gen.07", "gen.09", "gen.11",
"gen.13", "gen.15", "gen.17", "gen.19"),
v.names = "gstatus",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID")
dfttime <- df %>% dplyr::select(c(1, 21:30))
dfL_tt <- reshape(dfttime,
direction = "long",
varying = list(names(dfttime)[c(2:10)]),
v.names = "treattime",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
dfttime500 <- df %>% dplyr::select(1, 32:40)
dfL_tt500 <- reshape(dfttime500,
direction = "long",
varying = list(names(dfttime500)[c(2:10)]),
v.names = "treattime500",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 4))
dfL_isegL <- reshape(df,
direction = "long",
varying = list(names(df)[c(42:50)]),
v.names = "is_eg_byyear",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 53))
dfL_isegL500 <- reshape(df,
direction = "long",
varying = list(names(df)[c(51:59)]),
v.names = "is_eg_byyear500",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 53))
# number foreigners
dfL_aus <- reshape(baus,
direction = "long",
varying = list(names(baus)[c(2:10)]),
v.names = "auschange",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
bpdau[8:10] <- NA
bpdau <- bpdau %>% rename(pda.03 = V8, pda.05 = V9, pda.07 = V10) %>% dplyr::select(c(1, 8:10, 2:7))
pdauL <- reshape(bpdau,
direction="long",
varying = list(names(bpdau)[c(2:10)]),
v.names = "pdau",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")
) %>% tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
gaaL <- reshape(bgaa,
direction="long",
varying = list(names(bgaa)[c(2:10)]),
v.names = "gaa_change",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")
) %>% tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
euL <- reshape(beu,
direction="long",
varying = list(names(beu)[c(2:10)]),
v.names = "eu_change",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")
) %>% tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
waL <- reshape(bwa,
direction="long",
varying = list(names(bwa)[c(2:10)]),
v.names = "WA_change",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")
) %>% tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
dfL_full <- left_join(dfL_gstatus, dfL_aus, by=c("ID")) %>%
left_join(., dfL_tt, by=c("ID")) %>%
left_join(., dfL_tt500, by=c("ID")) %>%
left_join(., pdauL, by=c("ID")) %>%
left_join(., dfL_isegL, by=c("ID")) %>%
left_join(., dfL_isegL500, by=c("ID")) %>%
left_join(., gaaL, by=c("ID")) %>%
left_join(., euL, by=c("ID")) %>%
left_join(., waL, by=c("ID"))
dfL_full[is.na(dfL_full)] <- 0
dfL_full$Year <- dfL_full$Year %>% as.numeric()
dfL_full$is_eg_byyear500[dfL_full$is_eg_byyear == 1] <- 2
View(dfL_full)
View(dfL_gstatus)
########################################
# Thesis Script 2.3: Reformatting to long
########################################
library(tidyverse)
library(lubridate)
library(reshape2)
setwd("~/Desktop/Code/Thesis")
load("~/Desktop/Code/Thesis/Data_for_Analysis/bfinal.Rdata")
load("~/Desktop/Code/Thesis/Data_for_Analysis/eg.rda")
load("~/Desktop/Code/Thesis/Data_for_Analysis/pdau.Rdata")
##### some minor formatting before analysis
eg_lor_full$ID <- as.numeric(eg_lor_full$ID)
df <- left_join(bfinal, eg_lor_full, by=c("RAUMID" = "ID"))
df$F_IN_KRAFT.x <- round_date(df$F_IN_KRAFT.x, unit = "years") %>% lubridate::year() %>% as.numeric()
df$F_IN_KRAFT.y <- round_date(df$F_IN_KRAFT.y, unit = "years") %>% lubridate::year() %>% as.numeric()
df <- df[-c(2:6)]
df[is.na(df)] <- 0
##### converting data into long format
# status and protected status
data.frame(names(df))
dfg <- df[c(1, 3:12, 19:20, 32:34)]
dfL_gstatus <- reshape(dfg,
direction = "long",
varying = c("gen.01", "gen.03", "gen.05", "gen.07", "gen.09", "gen.11",
"gen.13", "gen.15", "gen.17", "gen.19"),
v.names = "gstatus",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID")
dfttime <- df %>% dplyr::select(c(1, 21:30))
dfL_tt <- reshape(dfttime,
direction = "long",
varying = list(names(dfttime)[c(2:10)]),
v.names = "treattime",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
View(dfL_tt)
View(dfttime)
dfL_tt <- reshape(dfttime,
direction = "long",
varying = list(names(dfttime)[c(2:11)]),
v.names = "treattime",
idvar = "RAUMID",
timevar = "Year",
times = c("2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
dfL_tt <- reshape(dfttime,
direction = "long",
varying = list(names(dfttime)[c(2:11)]),
v.names = "treattime",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>% dplyr::select(c(1, 4))
dfL_tt500 <- reshape(dfttime500,
direction = "long",
varying = list(names(dfttime500)[c(2:11)]),
v.names = "treattime500",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 4))
dfttime500 <- df %>% dplyr::select(1, 35:45)
dfL_tt500 <- reshape(dfttime500,
direction = "long",
varying = list(names(dfttime500)[c(2:11)]),
v.names = "treattime500",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 4))
View(dfL_tt500)
View(dfttime500)
dfL_tt500 <- reshape(dfttime500,
direction = "long",
varying = list(names(dfttime500)[c(2:11)]),
v.names = "treattime500",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019"))
dfL_tt500 <- reshape(dfttime500,
direction = "long",
varying = list(names(dfttime500)[c(2:11)]),
v.names = "treattime500",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID")
dfL_tt500 <- reshape(dfttime500,
direction = "long",
varying = list(names(dfttime500)[c(2:11)]),
v.names = "treattime500",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 4))
dfL_tt500 <- reshape(dfttime500,
direction = "long",
varying = list(names(dfttime500)[c(2:11)]),
v.names = "treattime500",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID")
dfttime500 <- df %>% dplyr::select(1, 35:44)
dfL_tt500 <- reshape(dfttime500,
direction = "long",
varying = list(names(dfttime500)[c(2:11)]),
v.names = "treattime500",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 4))
data.frame(names(df))
dfL_isegL <- reshape(df,
direction = "long",
varying = list(names(df)[c(46:55)]),
v.names = "is_eg_byyear",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 53))
View(dfL_isegL)
View(dfL_isegL)
dfL_isegL <- reshape(df,
direction = "long",
varying = list(names(df)[c(46:55)]),
v.names = "is_eg_byyear",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID") %>%  dplyr::select(c(1, 53))
View(dfL_isegL)
dfL_isegL <- reshape(df,
direction = "long",
varying = list(names(df)[c(46:55)]),
v.names = "is_eg_byyear",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID")
View(dfL_isegL)
data.frame(names(df[c(46:55)]))
data.frame(names(df[c(1, 46:55)]))
dfL_isegL <- reshape(df[c(1, 46:55)],
direction = "long",
varying = list(names(df)[c(2:11)]),
v.names = "is_eg_byyear",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID")
dfL_isegL <- reshape(df,
direction = "long",
varying = list(names(df)[c(46:55)]),
v.names = "is_eg_byyear",
idvar = "RAUMID",
timevar = "Year",
times = c("2001", "2003", "2005", "2007", "2009", "2011", "2013", "2015", "2017", "2019")) %>%
tibble::rowid_to_column(., "ID")
